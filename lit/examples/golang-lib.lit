\title{Golang library testing example}{golang-library-example}
\omit-children-from-table-of-contents

\use-plugin{concourse-docs}

You can run the tests for a Golang library across any specified versions.

\frame{https://ci.concourse-ci.org/teams/examples/pipelines/golang-lib}

This example shows how to have multiple versions of a language, environment, or dependency fetched and integrated in to a \reference{pipelines}{Pipeline}.

For these Docker images, defining them as \reference{resources} has two
advantages for this use case. First, this enables the pipeline to be triggered
when there are new versions of those images available. Second, referencing them
in the task's \reference{schema.task.image} param is helpful as it
will ensure consistency between the image versions fetched by the
\reference{resources}{Resource} and the image version running in the job.

\section{
  \title{Pipeline Configuration}{configuration}
    \remote-codeblock{yaml}{https://raw.githubusercontent.com/concourse/examples/master/pipelines/golang-lib.yml}
}

\section{
	\title{References}{references}

	\list{
		\reference{jobs}
	}{
		\reference{steps}
	}{
		\reference{tasks}
	}
}
